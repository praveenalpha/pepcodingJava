class Solution {
public:
    int coinChange_(vector<int>& coins, int amount,vector<int>& dp) {
        if(amount == 0)
            return dp[amount] = 0;
        if(dp[amount] != 0)
            return dp[amount];
        int heightMin = 1e8;
        for(int i=0;i<coins.size();i++) {
            if(amount - coins[i] >= 0) {
                int rHeight = coinChange_(coins,amount - coins[i],dp);
                if(rHeight != 1e8 && rHeight + 1 < heightMin) {
                    heightMin = rHeight + 1;
                }
            }
        }
        return dp[amount] = heightMin;
    }
    int coinChange(vector<int>& coins, int amount) {
        vector<int> dp(amount+1,0);
        int ans =  coinChange_(coins,amount,dp);
        return ans !=1e8?ans:-1;
    }
};
