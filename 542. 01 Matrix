class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        queue<pair<pair<int,int>,int>> q;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j] == 0){
                    q.push({{i,j},0});
                }
            }
        }
        vector<vector<int>> ans(n,vector<int> (m,0));
        vector<vector<int>> dir = {{0,-1},{-1,0},{0,1},{1,0}};
        while(q.size() != 0){
            pair<pair<int,int>,int> rpair = q.front();
            q.pop();
            for(int d=0;d<4;d++){
                int x = dir[d][0] + rpair.first.first;
                int y = dir[d][1] + rpair.first.second;
                if(x>=0 && x<n && y>=0 && y<m && matrix[x][y] == 1 && ans[x][y] == 0){
                    q.push({{x,y},rpair.second+1});
                    ans[x][y] = rpair.second+1;
                }
            }
        }
        return ans;
    }
};
