class Solution {
public:
    string longestPalindrome(string& s)
{
    int n = s.length();
    int max_ = 0;
    int si=0;
    int ei=0;
    vector<vector<int>> dp(n, vector<int>(n, 0));
    for (int gap = 0; gap < n; gap++)
    {
        for (int i = 0, j = gap; j < n; i++, j++)
        {
            if (gap == 0)
                dp[i][j] = 1;
            else if (gap == 1 && s[i] == s[j])
                dp[i][j] = 2;
            else if (s[i] == s[j] && dp[i + 1][j - 1]!=0)
                dp[i][j] = 2+ dp[i + 1][j - 1];
            if (max_<dp[i][j]){
                max_ = dp[i][j];
                 si = i;
                 ei = j;
            }
        }
    }
    return s.substr(si,(ei-si+1));
}
};
