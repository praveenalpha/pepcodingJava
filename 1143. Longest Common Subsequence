class Solution {
public:
    
    int lcs(string& s,string& t,int i,int j,vector<vector<int>>& dp){
        if(i == s.length() || j == t.length())
            return dp[i][j]=0;
        if(dp[i][j]!=-1)
            return dp[i][j];
        int ans = 0;
        if(s[i] == t[j])
            ans = max(ans , lcs(s,t,i+1,j+1,dp)+1);
        else{
            int a = lcs(s,t,i+1,j,dp);
            int b = lcs(s,t,i,j+1,dp);
            ans = max(ans,max(a,b));
        }
        return dp[i][j]=ans;
    }
    int longestCommonSubsequence(string text1, string text2) {
        vector<vector<int>> dp(text1.size()+1,vector<int>(text2.size()+1,-1));
        return lcs(text1,text2,0,0,dp);
    }
};
