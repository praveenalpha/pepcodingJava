/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxPathSum_(TreeNode* root,int &maxNodeToNode){
        if(root==nullptr)   return 0;
        int leftNodeToNodeSum = maxPathSum_(root->left,maxNodeToNode);
        int rightNodeToNodeSum = maxPathSum_(root->right,maxNodeToNode);
        int max_ = max(leftNodeToNodeSum,rightNodeToNodeSum) + root->val;
        maxNodeToNode = max(max(maxNodeToNode,root->val),max(leftNodeToNodeSum+rightNodeToNodeSum+root->val,max_));
        return max(root->val,max_);
    }
    int maxPathSum(TreeNode* root) {
        int maxNodeToNode = -1e8;
        maxPathSum_(root,maxNodeToNode);
        return maxNodeToNode;
    }
};
