/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void zigzagLevelOrder_(TreeNode* root,vector<vector<int>> &res,vector<int> ans){
        int count=1;
        queue<TreeNode*> q;
        q.push(root);
        while(q.size()!=0){
            int size = q.size();
            while(size-- > 0){
                TreeNode* rnode = q.front();
                if(rnode->left!=nullptr)    q.push(rnode->left);
                if(rnode->right!=nullptr)    q.push(rnode->right);
                ans.push_back(rnode->val);
                q.pop();
            }
            if(count%2==0){
                reverse(ans.begin(),ans.end());
                res.push_back(ans);
            }
            else{
                res.push_back(ans);
            }
            ans.clear();
            count++;
        }
    }
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root==nullptr)   return res;
        vector<int> ans;
        zigzagLevelOrder_(root,res,ans);
        return res;
    }
};
