class Solution {
public:
    int findPar(int u,vector<int>& par){
        if(par[u] == u)
            return u;
        return par[u] = findPar(par[u],par);
    }
    vector<int> findRedundantConnection(vector<vector<int>>& edges) {
        int n = edges.size();
        vector<int> par(n+1);
        for(int i=0;i<=n;i++)
            par[i] = i;
        for(vector<int> e:edges){
            int p1 = findPar(e[0],par);
            int p2 = findPar(e[1],par);
            if(p1 != p2){
                par[p1] = p2;
            }
            else return e;
        }
        
        return par;
    }
};
