class Solution {
public:
    vector<vector<int>> dir = {{1,0},{-1,0},{0,1},{0,-1}};
    void dfs(int i,int j,int n,int m,vector<vector<char>>& board){
        board[i][j] = '$';
        for(int d=0;d<4;d++){
            int r = i + dir[d][0];
            int c = j + dir[d][1];
            
            if(r>=0 && r<n && c>= 0 && c<m && board[r][c] == 'O')
                dfs(r,c,n,m,board);
        }
    }
    void solve(vector<vector<char>>& board) {
        int n = board.size();
        if(n==0)
            return;
        int m = board[0].size();
        if(m == 0)
            return;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(i==0||i==n-1||j==0||j==m-1){
                    if(board[i][j] == 'O')
                        dfs(i,j,n,m,board);
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j] == 'O')
                    board[i][j] = 'X';
                else if(board[i][j] == '$')
                    board[i][j] = 'O';
            }
        }
        
    }
};
