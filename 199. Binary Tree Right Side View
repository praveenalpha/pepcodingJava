/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void rightSideView_(TreeNode* root,vector<int> &ans){
        if(root==nullptr)   return;
        queue<TreeNode*> q;
        q.push(root);
        while(q.size()!=0){
            int size = q.size();
            int x;
            while(size-- > 0){
                TreeNode* rnode = q.front();
                if(rnode->left!=nullptr)    q.push(rnode->left);
                if(rnode->right!=nullptr)    q.push(rnode->right);
                x = rnode->val;
                q.pop();
            }
            ans.push_back(x);
        }
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        rightSideView_(root,ans);
        return ans;
    }
};
