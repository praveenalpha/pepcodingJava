class Solution {
public:
    int minPathDP(int sr,int sc,int er,int ec,vector<vector<int>>& grid,vector<vector<int>>& dp){
        for(int i=er;i>=0;i--){
            for(int j=ec;j>=0;j--){
                if(i==er && j==ec){
                    dp[i][j]=grid[i][j];
                    continue;
                }
                if(j==ec)
                    dp[i][j] = grid[i][j]+dp[i+1][j];
                else if(i==er)
                    dp[i][j] = grid[i][j]+dp[i][j+1];
                else 
                    dp[i][j] = grid[i][j]+min(dp[i+1][j],dp[i][j+1]);
            }
        }
        return dp[0][0];
    }
    int minPathSum(vector<vector<int>>& grid) {
        vector<vector<int>> dp;
        int n = grid[0].size();
        for(int i=0;i<grid.size();i++){
            dp.push_back(vector<int> (n,0));
        }
        return minPathDP(0,0,grid.size()-1,n-1,grid,dp);
    }
};
