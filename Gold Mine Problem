#include <bits/stdc++.h>
using namespace std;
vector<vector<int>> dirA = {{-1,1},{0,1},{1,1}};
int maxGold(int sr,int sc,int er,int ec,vector<vector<int>> arr,vector<vector<int>>& dp){
     if(sc == ec){
         return dp[sr][sc] = arr[sr][sc];
     }
     if(dp[sr][sc] != 0)
        return dp[sr][sc];
    int max_ = 0;
    for(int i=0;i<3;i++)
    {
        int r = sr + dirA[i][0];
        int c = sc + dirA[i][1];
        
        if(r >= 0 && r <= er && c >= 0 && c <= ec)
            max_ = max(max_,maxGold(r,c,er,ec,arr,dp));
    }
    return dp[sr][sc] = arr[sr][sc]+max_;
}
int main() {
    int t;
    cin>>t;
    while(t--){
        int n,m;
        cin>>n>>m;
        vector<vector<int>> arr;
        for(int i=0;i<n;i++)
            arr.push_back(vector<int> (m,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                cin>>arr[i][j];
            }
        }
        int max_ = 0;
        
        vector<vector<int>> dp;
        for(int i=0;i<n;i++)
            dp.push_back(vector<int> (m,0));
        for(int i=0;i<n;i++){
            max_ = max(max_,maxGold(i,0,n-1,m-1,arr,dp));
        }
        cout<<max_<<'\n';
    }
	return 0;
}
